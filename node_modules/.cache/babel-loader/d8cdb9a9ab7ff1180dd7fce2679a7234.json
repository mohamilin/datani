{"ast":null,"code":"var _jsxFileName = \"/home/amilin/Documents/Project/datani-web-app/datani/src/pages/Register.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRegisterAction } from '../redux/actions/user.actions';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nfunction Register() {\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [userRegister, setUserRegister] = useState({\n    fullname: \"\",\n    email: \"\",\n    password: \"\",\n    alamat: \"\",\n    profesi: \"\"\n  });\n  const [checkBoxData, setCheckBoxData] = useState([{\n    isChecked: false,\n    label: \"Male\"\n  }, {\n    isChecked: false,\n    label: \"Female\"\n  }]);\n\n  const handleCheck = itemCheckBox => {\n    itemCheckBox.isChecked = !itemCheckBox.isChecked;\n    let newData = [...checkBoxData];\n    setCheckBoxData(newData);\n  };\n\n  const isLogged = useSelector(state => state.user);\n  console.log('isloged', isLogged);\n  console.log('register', userRegister);\n\n  const handleChange = event => {\n    // console.log('evenet', event)\n    setUserRegister({ ...userRegister,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = data => {\n    console.log('data', data);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Nama Lengkap\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"fullname\",\n    ref: register,\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    ref: register,\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Gender Selection\"), checkBoxData.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: () => handleCheck(item),\n    type: \"checkbox\",\n    name: \"vehicle1\",\n    defaultChecked: item.isChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, item.label), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 52\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/amilin/Documents/Project/datani-web-app/datani/src/pages/Register.js"],"names":["React","useState","useDispatch","useSelector","setRegisterAction","useHistory","useForm","Register","register","handleSubmit","dispatch","history","userRegister","setUserRegister","fullname","email","password","alamat","profesi","checkBoxData","setCheckBoxData","isChecked","label","handleCheck","itemCheckBox","newData","isLogged","state","user","console","log","handleChange","event","target","name","value","onSubmit","data","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRegisterAction } from '../redux/actions/user.actions';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nfunction Register() {\n    const { register, handleSubmit } = useForm();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [userRegister, setUserRegister] = useState({\n        fullname: \"\",\n        email: \"\",\n        password: \"\",\n        alamat: \"\",\n        profesi: \"\"\n    })\n\n    const [checkBoxData, setCheckBoxData] = useState([\n        { isChecked: false, label: \"Male\" },\n        { isChecked: false, label: \"Female\" },\n    ]);\n\n    const handleCheck = (itemCheckBox) => {\n        itemCheckBox.isChecked = !itemCheckBox.isChecked\n    \n        let newData = [...checkBoxData]\n    \n        setCheckBoxData(newData)\n      }\n\n\n    const isLogged = useSelector((state) => state.user)\n    console.log('isloged', isLogged);\n    console.log('register', userRegister)\n\n    const handleChange = (event) => {\n        // console.log('evenet', event)\n        setUserRegister({\n            ...userRegister,\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    const onSubmit = (data) => {\n        console.log('data', data)\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                {/* <form \n            onSubmit={(event) => {\n                dispatch(setRegisterAction(register, event, history))\n            }}\n            > */}\n                <label>Nama Lengkap</label>\n                <input name=\"fullname\" ref={register} onChange={(event) => handleChange(event)} />\n                <label>Email</label>\n                <input name=\"email\" ref={register} onChange={(event) => handleChange(event)} />\n                <label>Gender Selection</label>\n                {checkBoxData.map((item, index) => (\n                    <div key={index}>\n                        <input\n                            onChange={() => handleCheck(item)}\n                            type=\"checkbox\"\n                            name=\"vehicle1\"\n                            defaultChecked={item.isChecked} />\n                        <label>{item.label}</label><br />\n                    </div>\n                ))}\n                {/* <select name=\"gender\" ref={register}>\n                    <option value=\"male\">male</option>\n                    <option value=\"female\">female</option>\n                </select> */}\n                <input type=\"submit\" />\n            </form>\n\n        </>\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}